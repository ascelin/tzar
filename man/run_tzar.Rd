% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emulateRunningUnderTzar.R
\name{run_tzar}
\alias{run_tzar}
\title{Run a function under normal tzar or tzar emulation}
\usage{
run_tzar(emulating_tzar, main_function, project_path,
  emulation_scratch_file_path, tzar_jar_path, copy_model_R_tzar_file = FALSE,
  model_R_tzar_src_dir = ".",
  model_R_tzar_disguised_filename = "model.R.tzar",
  overwrite_existing_model_R_dest = FALSE,
  required_model_R_filename_for_tzar = "model.R")
}
\arguments{
\item{emulating_tzar}{boolean with TRUE indicating main_function should be
run under tzar emulation and FALSE indicating run under normal tzar}

\item{main_function}{function to call to run under tzar or tzar emulation
(NOTE: NOT a string), i.e., your main application code}

\item{project_path}{path of R code and project.yaml file for project}

\item{emulation_scratch_file_path}{path of scratch file for passing
tzarEmulation flag and tzarOutputDir between tzar and mainline function}

\item{tzar_jar_path}{Path to the jar file to use to run tzar}

\item{copy_model_R_tzar_file}{Boolean flag indicating whether model.R must
be copied in (e.g., when running inside a package)}

\item{model_R_tzar_src_dir}{Path to directory holding the model.R file to
use to run tzar}

\item{model_R_tzar_disguised_filename}{Name (without path) of the file
containing the code to be run by tzar as model.R}

\item{overwrite_existing_model_R_dest}{Boolean flag indicating whether
model.R being copied in should overwrite any existing model.R in destination}

\item{required_model_R_filename_for_tzar}{Name of file that tzar expects to
find and execute to call user's application code from tzar (currently,
it's always "model.R")}
}
\value{
parameters list of parameters loaded from project.yaml file
}
\description{
If you're building a package rather than writing freestanding
R code, R will execute all ".R" files in the package's R directory
every time the package is built.  This is a problem when using tzar
because tzar expects to find and run a file called model.R in the
directory with all the other R code for the project.  If the code
that builds the package finds that file, it will try to run the code in
model.R and there will be code not encapsulated in a function and
the builder will blow up when it runs that code.  For example,
you might need one or more library() calls in model.R and these
are not supposed to be executed inside package code.
}
\details{
The way that run_tzar() is going to fake around this is to allow
you to to create a model.R by copying the code from some other
file into a file called model.R at the time tzar is run and then
remove it after tzar finishes.  This behavior is primarily
controlled by the boolean argument "copy_model_R_tzar_file".
If that flag is TRUE, then run_tzar() will look at other
arguments to the function to determine source and destination
locations and file names and take care of the copying and cleaning
up after the run.

If you are working on your project outside of building a package,
then it's not a problem to have the model.R code in the same
directory as your other R code that tzar expects to run for the
project.  In that case, just set the "copy_model_R_tzar_file" to
FALSE and all the other arguments related to it will be ignored.

NOTE:  Leaving the copying flag turned on does NOT hurt runs
       done outside of building a package, so it's recommended
       to just leave it turned on and put the code you would
       normally put in model.R in model.R.tzar instead and then
       let the run_tzar() manage all of that.  This way, you
       can use the emulator with the least amount of installation
       and management work for you when using the tzar package.
}
\examples{
\dontrun{
run_tzar (
         emulating_tzar              = TRUE,
         main_function               = trial_main_function,
         project_path                = ".",
         emulation_scratch_file_path = "~/tzar_emulation_scratch.yaml",
         tzar_jar_path               = "~/D/rdv-framework-latest-work/tzar.jar",
         copy_model_R_tzar_file             = FALSE,
         model_R_tzar_src_dir               = model_R_tzar_src_dir,
         model_R_tzar_disguised_filename    = "model.R.tzar",
         overwrite_existing_model_R_dest    = TRUE,
         required_model_R_filename_for_tzar = "model.R"
         )
}
}
